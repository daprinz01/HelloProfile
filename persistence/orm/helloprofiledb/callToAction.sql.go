// Code generated by sqlc. DO NOT EDIT.
// source: callToAction.sql

package helloprofiledb

import (
	"context"

	"github.com/google/uuid"
)

const getCallToAction = `-- name: GetCallToAction :one
select id, type, display_name from call_to_action where id=$1 limit 1
`

func (q *Queries) GetCallToAction(ctx context.Context, id uuid.UUID) (CallToAction, error) {
	row := q.queryRow(ctx, q.getCallToActionStmt, getCallToAction, id)
	var i CallToAction
	err := row.Scan(&i.ID, &i.Type, &i.DisplayName)
	return i, err
}

const getCallToActions = `-- name: GetCallToActions :many
select id, type, display_name from call_to_action
`

func (q *Queries) GetCallToActions(ctx context.Context) ([]CallToAction, error) {
	rows, err := q.query(ctx, q.getCallToActionsStmt, getCallToActions)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []CallToAction
	for rows.Next() {
		var i CallToAction
		if err := rows.Scan(&i.ID, &i.Type, &i.DisplayName); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
