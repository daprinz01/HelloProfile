// Code generated by sqlc. DO NOT EDIT.

package authdb

import (
	"context"
	"database/sql"
)

type Querier interface {
	AddApplicationRole(ctx context.Context, arg AddApplicationRoleParams) (ApplicationsRole, error)
	AddUserLanguage(ctx context.Context, arg AddUserLanguageParams) (UserLanguage, error)
	AddUserProvider(ctx context.Context, arg AddUserProviderParams) (UserProvider, error)
	AddUserRole(ctx context.Context, arg AddUserRoleParams) (UserRole, error)
	AddUserTimezone(ctx context.Context, arg AddUserTimezoneParams) (UserTimezone, error)
	CreateApplication(ctx context.Context, arg CreateApplicationParams) (Application, error)
	CreateIdentityProvider(ctx context.Context, arg CreateIdentityProviderParams) (IdentityProvider, error)
	CreateRole(ctx context.Context, arg CreateRoleParams) (Role, error)
	CreateTimezone(ctx context.Context, arg CreateTimezoneParams) (Timezone, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteApplication(ctx context.Context, id int64) error
	DeleteCountry(ctx context.Context, id int64) error
	DeleteIdentityProvider(ctx context.Context, id int64) error
	DeleteLanguage(ctx context.Context, id int64) error
	DeleteRoles(ctx context.Context, id int64) error
	DeleteTimezone(ctx context.Context, id int64) error
	DeleteUser(ctx context.Context) error
	GetApplication(ctx context.Context, id int64) (Application, error)
	GetApplications(ctx context.Context) ([]Application, error)
	GetCountries(ctx context.Context) ([]Country, error)
	GetCountry(ctx context.Context, id int64) (Country, error)
	GetIdentityProvider(ctx context.Context, id int64) (IdentityProvider, error)
	GetIdentityProviders(ctx context.Context) ([]IdentityProvider, error)
	GetLanguage(ctx context.Context, id int64) (Language, error)
	GetLanguages(ctx context.Context) ([]Language, error)
	GetRole(ctx context.Context, id int64) (Role, error)
	GetRoles(ctx context.Context) ([]Role, error)
	GetTimezone(ctx context.Context, id int64) (Timezone, error)
	GetTimezones(ctx context.Context) ([]Timezone, error)
	GetUser(ctx context.Context, username sql.NullString) (UserDetail, error)
	GetUsers(ctx context.Context) ([]UserDetail, error)
	UpdateApplication(ctx context.Context, arg UpdateApplicationParams) (Application, error)
	UpdateApplicationRole(ctx context.Context, arg UpdateApplicationRoleParams) (ApplicationsRole, error)
	UpdateCountry(ctx context.Context, arg UpdateCountryParams) (Country, error)
	UpdateIdentityProvider(ctx context.Context, arg UpdateIdentityProviderParams) (IdentityProvider, error)
	UpdateLanguage(ctx context.Context, arg UpdateLanguageParams) (Language, error)
	UpdateRole(ctx context.Context, arg UpdateRoleParams) (Role, error)
	UpdateTimezone(ctx context.Context, arg UpdateTimezoneParams) (Timezone, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
	UpdateUserLanguage(ctx context.Context, arg UpdateUserLanguageParams) (UserLanguage, error)
	UpdateUserProvider(ctx context.Context, arg UpdateUserProviderParams) (UserProvider, error)
	UpdateUserRole(ctx context.Context, arg UpdateUserRoleParams) (UserRole, error)
	UpdateUserTimezone(ctx context.Context, arg UpdateUserTimezoneParams) (UserTimezone, error)
}

var _ Querier = (*Queries)(nil)
